<!doctype html>
<html>
	<head>
		<meta charset="utf-8">

	 	<title>What is Version Control?</title>
	 	<meta name="description" content="What is Version Control?">
	 	<meta name="author" content="Colin Gislason">

	 	<link rel="stylesheet" href="styles.css">
	</head>
	<body>
		<div class="card">
			<h1>Version Control</h1>
			<hr/>

			<h3>What is it?</h3>
			<ul>
				<li>
					A tool that tracks changes in a set of files.
				</li>
				<li>
					Keeps a history of who made a change, what the change was and when the change was made.
				</li>
			</ul>

			<h3>Why use it?</h3>
			<ul>
				<li>
					Makes it easier to work with other people on the same files.
				</li>
				<li>
					Keep an accurate history of changes to a project.
				</li>
				<li>
					Recover lost file or revert to older versions if you need to.
				</li>
				<li>
					Easier backup of source code and other documents.
				</li>
			</ul>

			<h3>Varieities</h3>
			<dl>
				<dt>Centralized</dt>
				<dd>The repository is stored on a central server and versioning is tracked there. All operations are performed on the server. Each computer only has the files they are working with.</dd>
				<dd>examples: <strong>cvs, subversion</strong></dd>

				<dt>Decentralized</dt>
				<dd>Each computer has a full repository. Operations are performed locally and then <strong>pushed</strong> to remote repositories for collaboration.</dd>
				<dd>examples: <strong>git, mercurial</strong></dd>
			</dl>
		</div>

		<div class="card">
			<h1>Basic Workflow</h1>
			<hr/>

			<ul class="numbered">
				<li><strong>Clone</strong> a remote repository or create a <strong>new</strong> one.</li>
				<li>Make some changes or add new files.</li>
				<li>
					<strong>Stage</strong> and then <strong>Commit</strong> the changes, give it a short message explaining the changes. This creates a new <strong>revision</strong> in the repository.
				</li>
				<li><strong>Pull</strong> changes from a remote repository.</li>
				<li>Resolve any <strong>conflicts</strong>. e.g. places where the same part of a file was changed by more than one person between revisions.</li>
				<li><strong>Push</strong> your revisions to a remote repository.</li>
			</ul>
		</div>

		<div class="card">
			<h1>Definitions</h1>
			<hr/>

			<dl>
				<dt>Repository</dt>
				<dd>The set of files being tracked, including all versions.</dd>

				<dt>Clone</dt>
				<dd>Create a copy of an existing repository.</dd>

				<dt>Working Directory</dt>
				<dd>The files you are currently working with.</dd>

				<dt>Staging</dt>
				<dd>A set of changes (including new files) in your working directory that are prepared to put into the repository.</dd>

				<dt>Add</dt>
				<dd>Start tracking a file; adds it to the staging area.</dd>

				<dt>Commit</dt>
				<dd>Put all of the changes into the repository as a new snapshot.</dd>

				<dt>Branching</dt>
				<dd>Creating an alternate history or set of revisions. This is useful for experimenting, adding new features without interfering with normal development or developing more than one version at a time. e.g. 1.2 bug fix and 2.0 release.</dd>

				<dt>Merging</dt>
				<dd>Copying the revisions from one branch into another.</dd>

				<dt>Difference (diff)</dt>
				<dd>A list of the changes made between two version of the same file.</dd>

				<dt>Conflict</dt>
				<dd>Occurs when merging two revisions which have changes in the same part of a file.</dd>
				
			</dl>
		</div>
	</body>
</html>